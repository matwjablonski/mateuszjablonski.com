{"version":3,"sources":["components/PageTitle/PageTitle.style.js","components/PageTitle/PageTitle.js","components/BigLoader/BigLoader.js","helpers/text.js","components/Definition/Definition.style.js","components/Definition/Definition.js","pages/Glossary.js"],"names":["PageTitleHeadline","styled","h2","_templateObject","th","PageTitleWithAvatar","div","_templateObject2","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_PageTitle_style__WEBPACK_IMPORTED_MODULE_1__","PageTitle","props","a","createElement","text","BigLoaderWrapper","BigLoader","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","icon","faMagic","size","_ui_Text__WEBPACK_IMPORTED_MODULE_5__","d","__webpack_exports__","encodeText","decodeText","window","btoa","unescape","encodeURIComponent","decodeURIComponent","escape","atob","DefinitionBox","DefinitionEntryBox","DefinitionFirst","_templateObject3","DefinitionEntry","h3","_templateObject4","DefinitionSmall","small","_templateObject5","DefinitionText","p","_templateObject6","Definition","def","console","log","react_default","entry","slice","fullName","description","Glossary","_useState","useState","_useState2","Object","slicedToArray","definitions","setDefinitions","t","useTranslation","useEffect","request","get","then","res","data","sort","b","smooth_ui_core_sc_es","Head","length","map","Definition_Definition","key","id"],"mappings":"s3BAGO,IAAMA,EAAoBC,IAAOC,GAAVC,IAGbC,YAAG,YAOFA,YAAG,YAWuBA,YAAG,aAUlCC,EAAsBJ,IAAOK,IAAVC,uCClChC,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAMeI,IAFG,SAAAC,GAAK,OAAIJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KAAoBE,EAAMG,uXCGrD,IAAMC,EAAmBjB,IAAOK,IAAVH,IASTC,YAAG,aAYDe,IAPG,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,KAAH,OAChBI,EAAAN,EAAAC,cAACE,EAAD,KACEG,EAAAN,EAAAC,cAACM,EAAA,EAAD,CAAiBC,KAAMC,IAASC,KAAK,QACrCJ,EAAAN,EAAAC,cAACU,EAAA,EAAD,KAAOT,uCCxBXR,EAAAkB,EAAAC,EAAA,sBAAAC,IAAApB,EAAAkB,EAAAC,EAAA,sBAAAE,IAAO,IAAMD,EAAa,SAAAZ,GAAI,OAC5Bc,OAAOC,KAAKC,SAASC,mBAAmBjB,MAE7Ba,EAAa,SAAAb,GAAI,OAAIkB,mBAAmBC,OAAOL,OAAOM,KAAKpB,6hDCAjE,IAAMqB,EAAgBrC,IAAOK,IAAVH,IAOKC,YAAG,gBAIrBmC,EAAqBtC,IAAOK,IAAVC,KAIlBiC,EAAkBvC,IAAOK,IAAVmC,IAEZrC,YAAG,WACRA,YAAG,UAUDsC,EAAkBzC,IAAO0C,GAAVC,IAGXxC,YAAG,YAMFA,YAAG,YAWuBA,YAAG,aAUlCyC,EAAkB5C,IAAO6C,MAAVC,IACjB3C,YAAG,aAID4C,EAAiB/C,IAAOgD,EAAVC,IACV9C,YAAG,aCvDP+C,EAAa,SAAA/B,GAAa,IAAVgC,EAAUhC,EAAVgC,IAE3B,OADAC,QAAQC,IAAIF,GAEVG,EAAAxC,EAAAC,cAACsB,EAAD,KACEiB,EAAAxC,EAAAC,cAACuB,EAAD,KACEgB,EAAAxC,EAAAC,cAACwB,EAAD,KAAkBY,EAAII,MAAMC,MAAM,EAAG,IACrCF,EAAAxC,EAAAC,cAAC0B,EAAD,KACGU,EAAII,MACLD,EAAAxC,EAAAC,cAAC6B,EAAD,KAAkBO,EAAIM,YAG1BH,EAAAxC,EAAAC,cAACgC,EAAD,KAAiBlB,YAAWsB,EAAIO,gBCsBvBC,UAnCE,WAAM,IAAAC,EACiBC,mBAAS,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACDI,EADCJ,EAAA,GAGbK,EAAMC,cAAND,EAmBR,OAjBAE,oBAAU,WACRC,cACGC,IAAI,YACJC,KAAK,SAAAC,GAAG,OACPA,EAAIC,KAAKA,KAAKC,KAAK,SAAC7D,EAAG8D,GACrB,OAAI9D,EAAEyC,MAAQqB,EAAErB,MACP,EAELzC,EAAEyC,MAAQqB,EAAErB,OACN,EAEH,MAGViB,KAAK,SAAAC,GAAG,OAAIP,EAAeO,MAC7B,IAGDnB,EAAAxC,EAAAC,cAAC8D,EAAA,EAAD,KACEvB,EAAAxC,EAAAC,cAAC+D,EAAA,EAAD,MACAxB,EAAAxC,EAAAC,cAACH,EAAA,EAAD,CAAWI,KAAMmD,EAAE,0BAClBF,EAAYc,OACXd,EAAYe,IAAI,SAAA7B,GAAG,OAAIG,EAAAxC,EAAAC,cAACkE,EAAD,CAAYC,IAAK/B,EAAIgC,GAAIhC,IAAKA,MAErDG,EAAAxC,EAAAC,cAACG,EAAA,EAAD,CAAWF,KAAMmD,EAAE","file":"static/js/13.b62b6751.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { th } from '@smooth-ui/core-sc';\n\nexport const PageTitleHeadline = styled.h2`\n  display: inline-block;\n  font-size: 23px;\n  font-family: ${th('mainFont')};\n  margin-top: 45px;\n  padding-bottom: 15px;\n  position: relative;\n  white-space: nowrap;\n\n  &::before {\n    background: ${th('darkGrey')};\n    border-radius: 50%;\n    bottom: -2px;\n    content: '';\n    display: block;\n    height: 6px;\n    position: absolute;\n    width: 6px;\n  }\n\n  &::after {\n    background: linear-gradient(to right, ${th('darkGrey')}, transparent);\n    bottom: 0;\n    content: '';\n    display: block;\n    height: 1px;\n    position: absolute;\n    width: 100%;\n  }\n`;\n\nexport const PageTitleWithAvatar = styled.div`\n  display: flex;\n`;\n","import React from 'react';\n\nimport { PageTitleHeadline } from './PageTitle.style';\n\nconst PageTitle = props => <PageTitleHeadline>{props.text}</PageTitleHeadline>;\n\nexport default PageTitle;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { Text } from '../ui/Text';\nimport { th } from '@smooth-ui/core-sc';\n\nconst BigLoaderWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 4em 0;\n  text-align: center;\n\n  svg {\n    color: ${th('darkGrey')};\n    margin-bottom: 30px;\n  }\n`;\n\nconst BigLoader = ({ text }) => (\n  <BigLoaderWrapper>\n    <FontAwesomeIcon icon={faMagic} size=\"10x\" />\n    <Text>{text}</Text>\n  </BigLoaderWrapper>\n);\n\nexport default BigLoader;\n","export const encodeText = text =>\n  window.btoa(unescape(encodeURIComponent(text)));\n\nexport const decodeText = text => decodeURIComponent(escape(window.atob(text)));\n","import styled from 'styled-components';\nimport { th } from '@smooth-ui/core-sc';\n\nexport const DefinitionBox = styled.div`\n  padding: 10px 0;\n  margin: 0 auto 10px;\n  max-width: 100%;\n  width: 750px;\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid ${th('lighterGrey')};\n  }\n`;\n\nexport const DefinitionEntryBox = styled.div`\n  display: flex;\n`;\n\nexport const DefinitionFirst = styled.div`\n  align-items: center;\n  background: ${th('primary')};\n  color: ${th('white')};\n  display: flex;\n  height: 40px;\n  justify-content: center;\n  margin-right: 10px;\n  margin-top: 5px;\n  text-transform: uppercase;\n  width: 40px;\n`;\n\nexport const DefinitionEntry = styled.h3`\n  display: inline-block;\n  font-size: 18px;\n  font-family: ${th('mainFont')};\n  margin-top: 0;\n  padding-bottom: 15px;\n  position: relative;\n\n  &::before {\n    background: ${th('darkGrey')};\n    border-radius: 50%;\n    bottom: -2px;\n    content: '';\n    display: block;\n    height: 6px;\n    position: absolute;\n    width: 6px;\n  }\n\n  &::after {\n    background: linear-gradient(to right, ${th('darkGrey')}, transparent);\n    bottom: 0;\n    content: '';\n    display: block;\n    height: 1px;\n    position: absolute;\n    width: 100%;\n  }\n`;\n\nexport const DefinitionSmall = styled.small`\n  color: ${th('darkGrey')};\n  display: block;\n`;\n\nexport const DefinitionText = styled.p`\n  font-family: ${th('mainFont')};\n  font-size: 1em;\n  margin-top: 0.5em;\n`;\n","import React from 'react';\nimport { decodeText } from '../../helpers/text';\n\nimport {\n  DefinitionBox,\n  DefinitionEntryBox,\n  DefinitionEntry,\n  DefinitionSmall,\n  DefinitionText,\n  DefinitionFirst,\n} from './Definition.style';\n\nexport const Definition = ({ def }) => {\n  console.log(def);\n  return (\n    <DefinitionBox>\n      <DefinitionEntryBox>\n        <DefinitionFirst>{def.entry.slice(0, 1)}</DefinitionFirst>\n        <DefinitionEntry>\n          {def.entry}\n          <DefinitionSmall>{def.fullName}</DefinitionSmall>\n        </DefinitionEntry>\n      </DefinitionEntryBox>\n      <DefinitionText>{decodeText(def.description)}</DefinitionText>\n    </DefinitionBox>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Grid } from '@smooth-ui/core-sc';\nimport { useTranslation } from 'react-i18next';\n\nimport request from '../helpers/request';\nimport { Head } from '../components/Head/Head';\nimport BigLoader from '../components/BigLoader/BigLoader';\nimport PageTitle from '../components/PageTitle/PageTitle';\nimport { Definition } from '../components/Definition/Definition';\n\nconst Glossary = () => {\n  const [definitions, setDefinitions] = useState([]);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    request()\n      .get('glossary')\n      .then(res =>\n        res.data.data.sort((a, b) => {\n          if (a.entry > b.entry) {\n            return 1;\n          }\n          if (a.entry < b.entry) {\n            return -1;\n          }\n          return 0;\n        })\n      )\n      .then(res => setDefinitions(res));\n  }, []);\n\n  return (\n    <Grid>\n      <Head />\n      <PageTitle text={t('PAGES.GLOSSARY.TITLE')} />\n      {definitions.length ? (\n        definitions.map(def => <Definition key={def.id} def={def} />)\n      ) : (\n        <BigLoader text={t('NOTIFICATIONS.POSTS_LOADING')} />\n      )}\n    </Grid>\n  );\n};\n\nexport default Glossary;\n"],"sourceRoot":""}