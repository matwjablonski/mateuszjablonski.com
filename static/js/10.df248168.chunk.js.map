{"version":3,"sources":["components/PageTitle/PageTitle.style.js","components/Post/Post.style.js","components/FromMarkdown/FromMarkdown.js","components/BigLoader/BigLoader.js","components/ui/Figure.js","components/ui/ExternalLink.js","components/Post/PostCover.js","components/ui/SimpleButton.js","components/Post/PostSummary.js","pages/Home.js"],"names":["PageTitleHeadline","styled","h2","_templateObject","th","PageTitleWithAvatar","div","_templateObject2","PostSummaryStyle","article","PostLink","Link","PostTitle","_templateObject3","PostMeta","_templateObject4","PostAuthorImage","img","_templateObject5","PostMetaData","_templateObject6","PostAuthorName","p","_templateObject7","PostDate","_templateObject8","PostCoverImage","_templateObject9","PostCoverImageSource","span","_templateObject10","PostExcerpt","_templateObject11","PostContent","_templateObject12","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","html_react_parser__WEBPACK_IMPORTED_MODULE_1__","html_react_parser__WEBPACK_IMPORTED_MODULE_1___default","markdown_it__WEBPACK_IMPORTED_MODULE_2__","markdown_it__WEBPACK_IMPORTED_MODULE_2___default","FromMarkdown","_ref","text","md","MarkdownIt","a","createElement","Fragment","Parser","render","decodeURIComponent","escape","atob","BigLoaderWrapper","BigLoader","react__WEBPACK_IMPORTED_MODULE_1___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","icon","faMagic","size","_ui_Text__WEBPACK_IMPORTED_MODULE_5__","Figure","figure","Figcaption","figcaption","ExternalLinkStyle","ExternalLink_templateObject","ExternalLink","href","children","react_default","target","rel","PostCover","_ref$coverImage","coverImage","url","name","author","authorUrl","source","sourceUrl","t","useTranslation","Post_style","src","alt","concat","ExternalLink_ExternalLink","SimpleButton","PostSummary","post","me","useContext","MeContext","to","slug","title","avatar","hash","creationDate","moment","format","excerpt","Home","_useState","useState","_useState2","Object","_home_travis_build_matwjablonski_mateuszjablonski_com_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","posts","setPosts","useEffect","request","get","then","res","data","sort","b","_smooth_ui_core_sc__WEBPACK_IMPORTED_MODULE_2__","_components_Head_Head__WEBPACK_IMPORTED_MODULE_7__","length","map","_components_Post_PostSummary__WEBPACK_IMPORTED_MODULE_3__","key","id","_components_BigLoader_BigLoader__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"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","file":"static/js/10.df248168.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { th } from '@smooth-ui/core-sc';\n\nexport const PageTitleHeadline = styled.h2`\n  display: inline-block;\n  font-size: 23px;\n  font-family: ${th('mainFont')};\n  margin-top: 45px;\n  padding-bottom: 15px;\n  position: relative;\n  white-space: nowrap;\n\n  &::before {\n    background: ${th('darkGrey')};\n    border-radius: 50%;\n    bottom: -2px;\n    content: '';\n    display: block;\n    height: 6px;\n    position: absolute;\n    width: 6px;\n  }\n\n  &::after {\n    background: linear-gradient(to right, ${th('darkGrey')}, transparent);\n    bottom: 0;\n    content: '';\n    display: block;\n    height: 1px;\n    position: absolute;\n    width: 100%;\n  }\n`;\n\nexport const PageTitleWithAvatar = styled.div`\n  display: flex;\n`;\n","import styled from 'styled-components';\nimport { th } from '@smooth-ui/core-sc';\nimport { Link } from 'react-router-dom';\n\nimport { PageTitleHeadline } from '../PageTitle/PageTitle.style';\n\nexport const PostSummaryStyle = styled.article`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n\nexport const PostLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n`;\n\nexport const PostTitle = styled(PageTitleHeadline)`\n  font-family: ${th('mainFont')};\n  font-weight: 700;\n`;\n\nexport const PostMeta = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 1em;\n`;\n\nexport const PostAuthorImage = styled.img`\n  border-radius: 50%;\n  margin-right: 1em;\n`;\n\nexport const PostMetaData = styled.div``;\n\nexport const PostAuthorName = styled.p`\n  color: ${th('lightGrey')};\n  font-family: ${th('mainFont')};\n  font-size: 0.8em;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n`;\n\nexport const PostDate = styled.div`\n  color: ${th('darkGrey')};\n  font-family: ${th('mainFont')};\n  font-size: 0.8em;\n`;\n\nexport const PostCoverImage = styled.img`\n  border: 1px solid ${th('lighterGrey')};\n  border-radius: ${th('borderRadius')};\n  height: 400px;\n  object-fit: cover;\n  width: 100%;\n`;\n\nexport const PostCoverImageSource = styled.span`\n  color: white;\n  font-size: 0.7em;\n  line-height: 1;\n  padding: 10px 15px;\n  position: absolute;\n  top: 0;\n  transform: rotate(90deg);\n  transform-origin: left top;\n  white-space: nowrap;\n`;\n\nexport const PostExcerpt = styled.div`\n  font-family: ${th('mainFont')};\n`;\n\nexport const PostContent = styled.div`\n  font-family: ${th('mainFont')};\n  font-size: 1.3em;\n  line-height: 1.8;\n  margin: 0 auto;\n  max-width: 800px;\n\n  img {\n    max-width: 100%;\n  }\n`;\n","import React from 'react';\nimport Parser from 'html-react-parser';\nimport MarkdownIt from 'markdown-it';\n\nconst FromMarkdown = ({ text }) => {\n  const md = new MarkdownIt();\n\n  // console.log('text', text);\n  // text =\n  //   \"IyMgSmFrIENvbnRleHQgQVBJIG1vxbxlIG5hbSBwb23Ds2M/IAoKVyBrbGFzeWN6bmVqIGFwbGlrYWNqaSBuYXBpc2FuZWogdyBSZWFjdCBkYW5lIHPEhSBwcnpla2F6eXdhbmUgeiBnw7NyeSB3IGTDs8WCIHBvbWnEmWR6eSBrb21wb25lbnRhbWkgemEgcG9tb2PEhSBwcm9wc8Ozdy4gWmRhcnphasSFIHNpxJkgc3l0dWFjamUsIGdkeSBrb21wb25lbnQgemFnbmllxbxkxbxvbnkga2lsa2EgcG96aW9tw7N3IG5pxbxlaiBwb3RyemVidWplIGRhbnljaCB6IG5hand5xbxzemVnbyBrb21wb25lbnR1LiBQcm93YWR6aSB0byBkbyBzeXR1YWNqaSwga2llZHkgbXVzaW15IHByemVrYXphxIcgcHJvcHN5IHcgZMOzxYIgcHJ6ZXoga2lsa2Ega29tcG9uZW50w7N3Lg==\";\n  return text ? (\n    <>{Parser(md.render(decodeURIComponent(escape(atob(text)))))}</>\n  ) : null;\n};\n\nexport default FromMarkdown;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { Text } from '../ui/Text';\nimport { th } from '@smooth-ui/core-sc';\n\nconst BigLoaderWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 4em 0;\n  text-align: center;\n\n  svg {\n    color: ${th('darkGrey')};\n    margin-bottom: 30px;\n  }\n`;\n\nconst BigLoader = ({ text }) => (\n  <BigLoaderWrapper>\n    <FontAwesomeIcon icon={faMagic} size=\"10x\" />\n    <Text>{text}</Text>\n  </BigLoaderWrapper>\n);\n\nexport default BigLoader;\n","import styled from 'styled-components';\nimport { th } from '@smooth-ui/core-sc';\n\nexport const Figure = styled.figure`\n  margin: 1em 0;\n  position: relative;\n`;\n\nexport const Figcaption = styled.figcaption`\n  color: ${th('lightGrey')};\n  font-family: ${th('mainFont')};\n  font-size: 0.8rem;\n  text-align: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ExternalLinkStyle = styled.a`\n  color: inherit;\n`;\n\nexport const ExternalLink = ({ href, children }) => (\n  <ExternalLinkStyle href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {children}\n  </ExternalLinkStyle>\n);\n","import React from 'react';\nimport { PostCoverImage, PostCoverImageSource } from './Post.style';\n\nimport { Figure, Figcaption } from '../ui/Figure';\nimport { ExternalLink } from '../ui/ExternalLink';\nimport { useTranslation } from 'react-i18next';\n\nconst PostCover = ({\n  coverImage: { url, name, author, authorUrl, source, sourceUrl },\n}) => {\n  const { t } = useTranslation();\n  return (\n    <Figure>\n      <PostCoverImage\n        src={url}\n        alt={`${name} ${t('PAGES.POST.COVER_THUMBNAL.BY_WHOM')} ${author}`}\n      />\n      <PostCoverImageSource>from {source}</PostCoverImageSource>\n      <Figcaption>\n        <ExternalLink href={sourceUrl}>{name}</ExternalLink>\n        &nbsp;{t('PAGES.POST.COVER_THUMBNAL.BY_WHOM')}&nbsp;\n        <ExternalLink href={authorUrl}>{author}</ExternalLink>\n      </Figcaption>\n    </Figure>\n  );\n};\n\nexport default PostCover;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { th } from '@smooth-ui/core-sc';\n\nexport const SimpleButton = styled(Link)`\n  color: ${th('darkGrey')};\n  font-family: ${th('mainFont')};\n  font-size: 1em;\n  font-weight: 700;\n  text-decoration: none;\n  transition: ${th('coreTiming')};\n\n  &:hover {\n    color: ${th('lightGrey')};\n    transition: ${th('coreTiming')};\n  }\n`;\n","import React, { useContext } from 'react';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport {\n  PostSummaryStyle,\n  PostTitle,\n  PostExcerpt,\n  PostMeta,\n  PostMetaData,\n  PostAuthorImage,\n  PostAuthorName,\n  PostDate,\n  PostLink,\n} from './Post.style';\nimport PostCover from './PostCover';\nimport FromMarkdown from '../FromMarkdown/FromMarkdown';\n\nimport { SimpleButton } from '../ui/SimpleButton';\nimport { MeContext } from '../../meContext';\n\nconst PostSummary = ({ post }) => {\n  const { t } = useTranslation();\n  const me = useContext(MeContext);\n\n  return (\n    <PostSummaryStyle>\n      <PostLink to={`blog/${post.slug}`}>\n        <PostTitle>{post.title}</PostTitle>\n      </PostLink>\n      <PostCover coverImage={post.coverImage} />\n      <PostMeta>\n        <PostAuthorImage\n          src={`https://www.gravatar.com/avatar/${me.avatar.hash}?s=40`}\n          alt={post.author || me.name}\n        />\n        <PostMetaData>\n          <PostAuthorName>{post.author || me.name}</PostAuthorName>\n          <PostDate>\n            {post.creationDate &&\n              moment(post.creationDate).format('DD.MM.YYYY')}\n          </PostDate>\n        </PostMetaData>\n      </PostMeta>\n      <PostExcerpt>\n        <FromMarkdown text={post.excerpt || ''} />\n      </PostExcerpt>\n      <SimpleButton to={`blog/${post.slug}`}>\n        {t('PAGES.POST.READ_MORE')}\n      </SimpleButton>\n    </PostSummaryStyle>\n  );\n};\n\nexport default PostSummary;\n","import React, { useState, useEffect } from 'react';\nimport { Grid } from '@smooth-ui/core-sc';\n\nimport PostSummary from '../components/Post/PostSummary';\nimport request from '../helpers/request';\nimport BigLoader from '../components/BigLoader/BigLoader';\nimport { useTranslation } from 'react-i18next';\nimport { Head } from '../components/Head/Head';\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n  const { t } = useTranslation();\n  useEffect(() => {\n    request()\n      .get('posts')\n      .then(res =>\n        res.data.data.sort((a, b) => {\n          if (a.creationDate > b.creationDate) {\n            return -1;\n          }\n          if (a.creationDate < b.creationDate) {\n            return 1;\n          }\n          return 0;\n        })\n      )\n      .then(res => setPosts(res));\n  }, []);\n  return (\n    <Grid>\n      <Head />\n      {posts.length ? (\n        posts.map(post => <PostSummary key={post.id} post={post} />)\n      ) : (\n        <BigLoader text={t('NOTIFICATIONS.POSTS_LOADING')} />\n      )}\n    </Grid>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}